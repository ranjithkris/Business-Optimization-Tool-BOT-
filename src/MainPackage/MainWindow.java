package MainPackage;

import MainPackage.Assignment.AssignmentMainFrame;
import MainPackage.Game_Dominance.DominanceMainFrame;
import MainPackage.Game_mixedstrategy.MixedStrategyMainFrame;
import MainPackage.Lpp.LppMainFrame;
import MainPackage.Transportation.*;
import MainPackage.Tsp.TspArrayMainWindow;
import MainPackage.Tsp.TspMainFrame;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import static java.lang.Thread.sleep;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.PLAIN_MESSAGE;
import javax.swing.border.TitledBorder;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ranjith
 */
public class MainWindow extends javax.swing.JFrame {

    private static final long serialVersionUID = 9220036263068464736L;
    static MainWindow BOTWindow;
    static boolean single_instance = false;
    About ob = new About();
    public static String starting_message = "<html><center><u><b>Operations Research</b></u></center><br>&nbsp;&nbsp;&nbsp;&nbsp;Operations research is a discipline that deals with the application of advanced analytical methods to "
                + "help make better decisions. In British, this operations research term<br> is used as “Operational analysis”. It is considered to "
                + "be a sub-field of mathematics. Operations research arrives at optimal solutions to complex decision making<br> problems. "
                + "Operations research is often concerned with determining the maximum or minimum of some real-world objective. \n "
                + "<br>&nbsp;&nbsp;&nbsp;&nbsp;OR is the use of mathematical models, statistics and algorithm to aid in decision-making. It is most often used to analyse "
                + "complex real life problems typically with the goal<br> of improving or optimizing performance. Operations research applies statistical"
                + " analysis and mathematical modelling to solve an array of business and organizational<br> problems, as well as improve decision-making."
                + " As the business environment grows more complex, companies and government agencies depend on management.</html>";
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        display.setText(starting_message);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        game_mixed = new javax.swing.JButton();
        about = new javax.swing.JButton();
        game_dominance = new javax.swing.JButton();
        graphical = new javax.swing.JButton();
        transportation = new javax.swing.JButton();
        assignment = new javax.swing.JButton();
        tsp = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BOT");
        setLocationByPlatform(true);
        setResizable(false);

        mainPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "'BUSINESS OPTIMIZATION TOOL'",TitledBorder.CENTER,TitledBorder.CENTER));

        game_mixed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainPackage/mixed.jpg"))); // NOI18N
        game_mixed.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        game_mixed.setBorderPainted(false);
        game_mixed.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        game_mixed.setFocusable(false);
        game_mixed.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                game_mixedMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                game_mixedMouseExited(evt);
            }
        });
        game_mixed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                game_mixedActionPerformed(evt);
            }
        });

        about.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainPackage/about.jpg"))); // NOI18N
        about.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        about.setFocusable(false);
        about.setPreferredSize(new java.awt.Dimension(200, 120));
        about.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                aboutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                aboutMouseExited(evt);
            }
        });
        about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });

        game_dominance.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainPackage/dom.jpg"))); // NOI18N
        game_dominance.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        game_dominance.setFocusable(false);
        game_dominance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                game_dominanceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                game_dominanceMouseExited(evt);
            }
        });
        game_dominance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                game_dominanceActionPerformed(evt);
            }
        });

        graphical.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainPackage/graph.jpg"))); // NOI18N
        graphical.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        graphical.setFocusable(false);
        graphical.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                graphicalMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                graphicalMouseExited(evt);
            }
        });
        graphical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graphicalActionPerformed(evt);
            }
        });

        transportation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainPackage/transportation.jpg"))); // NOI18N
        transportation.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        transportation.setFocusable(false);
        transportation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                transportationMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                transportationMouseExited(evt);
            }
        });
        transportation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transportationActionPerformed(evt);
            }
        });

        assignment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainPackage/assignment.jpg"))); // NOI18N
        assignment.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        assignment.setFocusable(false);
        assignment.setPreferredSize(new java.awt.Dimension(200, 120));
        assignment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                assignmentMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                assignmentMouseExited(evt);
            }
        });
        assignment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignmentActionPerformed(evt);
            }
        });

        tsp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainPackage/tsp.jpg"))); // NOI18N
        tsp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tsp.setFocusable(false);
        tsp.setPreferredSize(new java.awt.Dimension(200, 120));
        tsp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tspMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tspMouseExited(evt);
            }
        });
        tsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tspActionPerformed(evt);
            }
        });

        display.setEditable(false);
        display.setContentType("text/html"); // NOI18N
        display.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        display.setFocusable(false);
        jScrollPane2.setViewportView(display);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainPackage/aboutor.jpg"))); // NOI18N
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setFocusable(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(game_mixed, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(graphical, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(50, 50, 50)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tsp, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transportation, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(about, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assignment, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(game_dominance, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(transportation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(graphical, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(game_dominance, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(assignment, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(tsp, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(game_mixed, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(about, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void game_mixedMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_game_mixedMouseEntered
        // TODO add your handling code here:
        String message = "<html><center><u><b>Mixed Strategy</b></u></center><br>&nbsp;&nbsp;&nbsp;&nbsp;Game theory is the study of how and "
                + "why people make decisions. It helps people to understand about how to reach a best decision by choosing to do one thing out "
                + "of<br> number of other things they could do. Game theory is not just about games, but how and why decision is made in businesses, "
                + "and just about any decision based on<br> the outcomes obtained.\n "
                + "<br>&nbsp;&nbsp;&nbsp;&nbsp;The term mixed strategy is also called as “2*n games” or “m*2 games”. These are the games in which one player has only "
                + "two courses of action opened to him while<br> his opponent may have any number. To solve such games, the first step is to look for "
                + "a saddle point; if there is one, the game is readily solved if not, the next step is to<br> reduce the given matrix to 2*2 size by "
                + "the rules of dominance strategy. </html>";
        display.setText(message);
    }//GEN-LAST:event_game_mixedMouseEntered

    private void game_mixedMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_game_mixedMouseExited
        // TODO add your handling code here:
        display.setText(starting_message);
    }//GEN-LAST:event_game_mixedMouseExited

    private void transportationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transportationActionPerformed
        // TODO add your handling code here:
        BOTWindow.dispose();
        new Thread(new Runnable()
                            {
                                @Override
                                public void run()
                                {
                                    TransportationMainFrame.start();
                                }
                            }).start();
    }//GEN-LAST:event_transportationActionPerformed

    private void assignmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignmentActionPerformed
        // TODO add your handling code here:
        new Thread(new Runnable()
                            {
                                @Override
                                public void run()
                                {
                                    AssignmentMainFrame.start();
                                }
                            }).start();
                            BOTWindow.dispose();
    }//GEN-LAST:event_assignmentActionPerformed

    private void game_dominanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_game_dominanceActionPerformed
        // TODO add your handling code here:
        new Thread(new Runnable()
                            {
                                @Override
                                public void run()
                                {
                                    DominanceMainFrame.start();
                                }
                            }).start();
                            BOTWindow.dispose();
    }//GEN-LAST:event_game_dominanceActionPerformed

    private void game_mixedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_game_mixedActionPerformed
        // TODO add your handling code here:
        new Thread(new Runnable()
                            {
                                @Override
                                public void run()
                                {
                                    MixedStrategyMainFrame.start();
                                }
                            }).start();
                            BOTWindow.dispose();
       
    }//GEN-LAST:event_game_mixedActionPerformed

    private void game_dominanceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_game_dominanceMouseEntered
        // TODO add your handling code here:
        String message = "<html><center><u><b>Dominance Rule</b></u></center><br>&nbsp;&nbsp;&nbsp;&nbsp;Game theory is the study of how and why people make decisions. It helps people to understand about how to reach a "
                + "best decision by choosing to do one thing out of<br> number of other things they could do. Game theory is not just about games, "
                + "but how and why decision is made in businesses, and just about any decision based on<br> the outcomes obtained.\n "
                + "<br>&nbsp;&nbsp;&nbsp;&nbsp;In game theory, dominance strategy occurs when one strategy is better than another strategy for one player, no matter how those "
                + "players opponents may play. Many<br> simple games can be solved using dominance. When a player tries to choose the “best” strategy among "
                + "the few options, that player may compare two strategies A and B to<br> see which one is better.</html>";
        display.setText(message);
    }//GEN-LAST:event_game_dominanceMouseEntered

    private void game_dominanceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_game_dominanceMouseExited
        // TODO add your handling code here:
        display.setText(starting_message);
    }//GEN-LAST:event_game_dominanceMouseExited

    private void graphicalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graphicalActionPerformed
        // TODO add your handling code here:
        new Thread(new Runnable()
                            {
                                @Override
                                public void run()
                                {
                                    LppMainFrame.start();
                                }
                            }).start();
                            BOTWindow.dispose();
    }//GEN-LAST:event_graphicalActionPerformed

    private void tspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tspActionPerformed
        // TODO add your handling code here:
        new Thread(new Runnable()
                            {
                                @Override
                                public void run()
                                {
                                  //  TspMainFrame.start();
                                    TspMainFrame.start();
                                }
                            }).start();
                            BOTWindow.dispose();
    }//GEN-LAST:event_tspActionPerformed

    private void aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
        // TODO add your handling code here:
        try
        {
            if(!single_instance)
            {
                single_instance = true;
                try 
                {
                    Image img = ImageIO.read(MainWindow.class.getResource("bot.png"));
                    ob.setIconImage(img);
                } catch (IOException ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
        
                ob.setLocationRelativeTo(null);
                ob.setVisible(true);
            }
            else if(!ob.isVisible())
            {
                ob = null;
                single_instance = false;
                ob = new About();  
                try 
                {
                    Image img = ImageIO.read(MainWindow.class.getResource("bot.png"));
                    ob.setIconImage(img);
                } catch (IOException ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
        
                ob.setLocationRelativeTo(null);
                ob.setVisible(true);
                single_instance = true;
            }
        }
        catch(Exception e)
        {}
    }//GEN-LAST:event_aboutActionPerformed

    private void graphicalMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_graphicalMouseEntered
        // TODO add your handling code here:
        String message = "<html><center><u><b>Graphical Method</b></u></center><br>&nbsp;&nbsp;&nbsp;&nbsp;Linear programming is the process of taking various linear inequalities relating to some situation, "
                + "and finding the \"best\" value obtainable under those conditions. It is<br> a method to achieve the best outcome (such as maximum "
                + "profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships.<br>&nbsp;&nbsp;&nbsp;&nbsp;Linear programming is a "
                + "special case of mathematical programming (mathematical optimization). A typical example would be taking the limitations of materials "
                + "and<br> labour, and then determining the \"best\" production levels for maximal profits under those conditions.\n "
                + "<br>&nbsp;&nbsp;&nbsp;&nbsp;Graphical method, or Geometric method, allows solving linear programming problems intuitively and visually. This method is limited to two or "
                + "three problems decision variables since it is not possible to graphically illustrate more than 3D.</html>";
        display.setText(message);
    }//GEN-LAST:event_graphicalMouseEntered

    private void transportationMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transportationMouseEntered
        // TODO add your handling code here:
        String message = "<html><center><u><b>Transportation Problem</b></u></center><br>&nbsp;&nbsp;&nbsp;&nbsp;One of the most important and successful applications of quantitative analysis to solving business problems has been "
                + "in the physical distribution of products,<br> commonly referred to as transportation problems.\n "
                + "<br>&nbsp;&nbsp;&nbsp;&nbsp;Basically, the purpose is to minimize the cost of shipping goods from one location to another so "
                + "that the needs of each arrival area are met and every shipping location<br> operates within its capacity. "
                + "However, quantitative analysis has been used for many problems other than the physical distribution of goods. "
                + "An iterative procedure for<br> solving problems that involves minimizing the cost of shipping products from a series of "
                + "sources to a series of destinations.</html>";
        display.setText(message);
    }//GEN-LAST:event_transportationMouseEntered

    private void graphicalMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_graphicalMouseExited
        // TODO add your handling code here:
        display.setText(starting_message);
    }//GEN-LAST:event_graphicalMouseExited

    private void transportationMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transportationMouseExited
        // TODO add your handling code here:
        display.setText(starting_message);
    }//GEN-LAST:event_transportationMouseExited

    private void assignmentMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assignmentMouseExited
        // TODO add your handling code here:
        display.setText(starting_message);
    }//GEN-LAST:event_assignmentMouseExited

    private void tspMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tspMouseExited
        // TODO add your handling code here:
        display.setText(starting_message);
    }//GEN-LAST:event_tspMouseExited

    private void aboutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutMouseExited
        // TODO add your handling code here:
        display.setText(starting_message);
    }//GEN-LAST:event_aboutMouseExited

    private void assignmentMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assignmentMouseEntered
        // TODO add your handling code here:
        String message = "<html><center><u><b>Assignment Problem</b></u></center><br>&nbsp;&nbsp;&nbsp;&nbsp;Assignment problem is one of the special cases of transportation problems. The goal of the assignment problem is to "
                + "minimize the cost or time of completing a number<br> of jobs by a number of persons. Assignment problems arise in different situation "
                + "where we have to find an optimal way to assign n-objects to m-other objects in an injective<br> fashion. An important characteristic "
                + "f the assignment problem is the number of sources is equal to the number of destinations.\n "
                + "<br>&nbsp;&nbsp;&nbsp;&nbsp;The assignment problems are a well-studied topic in combinatorial optimization. These problems find numerous "
                + "applications in production planning, telecommunication<br> VLSI design, economic etc. Depending on the objective we want to "
                + "optimize, we obtain the typical assignment problems.</html>";
        display.setText(message);
    }//GEN-LAST:event_assignmentMouseEntered

    private void tspMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tspMouseEntered
        // TODO add your handling code here:
        String message = "<html><center><u><b>Travelling Salesman Problem</b></u></center><br>&nbsp;&nbsp;&nbsp;&nbsp;A Metaheuristic is an iterative generation process that provides a set of guidelines or strategies to develop specific "
                + "heuristic method. A metaheuristic is formally defined as an iterative generation process which guides a subordinate heuristic by "
                + "combining intelligently different concepts for exploring and exploiting the search space, learning strategies are used to structure "
                + "information in order to find efficiently near-optimal solutions.\n "
                + "<br>&nbsp;&nbsp;&nbsp;&nbsp;Traveling Salesman Problem has been one of the most interesting and challenging problem in the literature. "
                + "It is include a large area in combinatorial optimization problem.A variety of Exact and Heuristic Algorithms are usable"
                + " algorithms for solving TSP. Branch and Bound Algorithm is an exact algorithm that is developed for solving TSP type problems. "
                + "Furthermore, Genetic Algorithm is one of the extensively algorithm within the Heuristic Algorithm.</html>";
        display.setText(message);
    }//GEN-LAST:event_tspMouseEntered

    private void aboutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutMouseEntered
        // TODO add your handling code here:
        String message = "<html><center><u><b>About</b></u></center><br>&nbsp;&nbsp;&nbsp;&nbsp;About out tool \"BOT v1.0\"</html>";
        display.setText(message);
    }//GEN-LAST:event_aboutMouseEntered

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        // TODO add your handling code here:
        String message = "<html><center><u><b>About Operations Research</b></u></center><br>&nbsp;&nbsp;&nbsp;&nbsp;Description of Operations Research.</html>";
        display.setText(message);
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        // TODO add your handling code here:
        display.setText(starting_message);
    }//GEN-LAST:event_jButton1MouseExited

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
                                    String source = System.getProperty("user.dir");
                                    File file = new File(source+"\\html\\or.html");
                                    URI uri = file.toURI();
                                    java.awt.Desktop.getDesktop().browse(uri);
                                } catch (Exception ex) {
                                }
    }//GEN-LAST:event_jButton1ActionPerformed

    public static void start()
    {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            
            public void run() {
                BOTWindow = new MainWindow();
        
                try {
                    Image img = ImageIO.read(getClass().getResource("bot.png"));
                    BOTWindow.setIconImage(img);
                } catch (IOException ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
        
                BOTWindow.setLocationRelativeTo(null);
                BOTWindow.setVisible(true);
                }
        });
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
               
        
        //</editor-fold>

        try
        {
            Thread.sleep(5000);
        }
        catch(Exception e)
        {}     
        start();
        try
        {
            Thread.sleep(1500);
        }
        catch(Exception e)
        {} 
        JOptionPane.showMessageDialog(BOTWindow, "<html><b>Designed and Developed By</b> <b style='color:blue'>OR-Team:</b>"
                + "\n<html>&nbsp;&nbsp;&nbsp;&nbsp;Ranjith K"
                + "\n<html>&nbsp;&nbsp;&nbsp;&nbsp;Rajat Balse"
                + "\n<html>&nbsp;&nbsp;&nbsp;&nbsp;Shreesha V Shetty"
                + "\n<html>&nbsp;&nbsp;&nbsp;&nbsp;Rithika S", "BOT",PLAIN_MESSAGE);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton about;
    private javax.swing.JButton assignment;
    private javax.swing.JTextPane display;
    private javax.swing.JButton game_dominance;
    private javax.swing.JButton game_mixed;
    private javax.swing.JButton graphical;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton transportation;
    private javax.swing.JButton tsp;
    // End of variables declaration//GEN-END:variables
}
